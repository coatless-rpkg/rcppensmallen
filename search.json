[{"path":"https://coatless.github.io/rcppensmallen/articles/package-usage.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Using RcppEnsmallen in Your Own R Package","text":"RcppEnsmallen best used within R package. setup RcppEnsmallen’s use mirrors Rcpp-based projects. particular, DESCRIPTION file requires LinkingTo field two files inside src/ establish necessary compilation options. next two sections, show modifications.","code":""},{"path":"https://coatless.github.io/rcppensmallen/articles/package-usage.html","id":"description-file","dir":"Articles","previous_headings":"Overview","what":"DESCRIPTION file","title":"Using RcppEnsmallen in Your Own R Package","text":"Open R package’s DESCRIPTION file. Ensure LinkingTo directive present contains:","code":"LinkingTo: Rcpp, RcppArmadillo (>= 0.9.800.0.0), RcppEnsmallen (>= 0.2.20.0.1)"},{"path":"https://coatless.github.io/rcppensmallen/articles/package-usage.html","id":"makevars-inside-the-src-directory","dir":"Articles","previous_headings":"Overview","what":"Makevars inside the src/ Directory","title":"Using RcppEnsmallen in Your Own R Package","text":"Next, src/ directory must contain Makevars Makevars.win file. file must contents : Makevars.win file provides appropriate configuration Windows Makevars acts Unix-alike systems like macOS, Linux, Solaris.","code":"PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS) PKG_LIBS = $(SHLIB_OPENMP_CXXFLAGS) $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS)"},{"path":"https://coatless.github.io/rcppensmallen/articles/using-rcppensmallen.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Solving Linear Regression using Numeric Optimization","text":"RcppEnsmallen package provides embedded copy ensmallen C++ library optimization functions. Optimizers contained within state art possess high level code quality. optimizer must accessed C++ implementing appropriate objective functions , , surfaced R RcppArmadillo. Alternatively, work done Dirk Schumacher armacmp automatically create underlying C++ code R. Note: Optimizers RcppEnsmallen work armadillo data structures. Thus, using Eigen RcppEigen, please consider RcppNumerical package.","code":""},{"path":"https://coatless.github.io/rcppensmallen/articles/using-rcppensmallen.html","id":"linear-regression","dir":"Articles","previous_headings":"Overview","what":"Linear Regression","title":"Solving Linear Regression using Numeric Optimization","text":"Consider Residual Sum Squares, also known RSS, defined : \\[RSS\\left( \\beta \\right) = \\left( { \\mathbf{y} - \\mathbf{X} \\beta } \\right)^{\\top} \\left( \\mathbf{y} - \\mathbf{X} \\beta \\right)\\] objective function wish minimize defined : \\[f(\\beta) = \\rVert \\mathbf{y} - \\mathbf{X}\\beta\\lVert_2\\] gradient defined : \\[\\frac{\\partial RSS}{\\partial \\beta} = -2 \\mathbf{X}^{\\top} \\left(\\mathbf{y} - \\mathbf{X} \\beta \\right)\\]","code":""},{"path":"https://coatless.github.io/rcppensmallen/articles/using-rcppensmallen.html","id":"two-step-implementation","dir":"Articles","previous_headings":"Overview > Linear Regression","what":"Two-Step Implementation","title":"Solving Linear Regression using Numeric Optimization","text":"using ensmallen solve problem, must create C++ class computes objective function value gradient value either together separately member functions named : Evaluate(): Value objective function parameters. Gradient(): Convergence correct value given parameters. EvaluateWithGradient(): Perform steps time. (Optional) Linear Regression scenario, define step separately emphasize calculation occurring. Generally, one step EvaluateWithGradient() function faster two step variant. details design can found ensmallen documentation page differentiable functions. writing class, RcppEnsmallen requires accessing library standalone C++ file follow include Rcpp Attribute declarations: overaching Linear regression class constructed follows: : Construct C++ function exports R. Within function, determine appropriate optimizer problem. Combine optimizer linear regression class compute solution problem. Note: Make sure definition Linear Regression class C++ file exported C++ function R.","code":"#include <RcppEnsmallen.h> // [[Rcpp::depends(RcppEnsmallen)]] #include <RcppEnsmallen.h> // [[Rcpp::depends(RcppEnsmallen)]]  // Define a differentiable objective function by implementing both Evaluate() // and Gradient() separately. class LinearRegressionFunction { public:   // Construct the object with the given the design    // matrix and responses.   LinearRegressionFunction(const arma::mat& X,                            const arma::vec& y) :   X(X), y(y) { }    // Return the objective function for model parameters beta.   double Evaluate(const arma::mat& beta)   {       return std::pow(arma::norm(y - X * beta), 2.0);   }    // Compute the gradient for model parameters beta   void Gradient(const arma::mat& beta, arma::mat& g)   {       g = -2 * X.t() * (y - X * beta);   }  private:   // The design matrix.   const arma::mat& X;   // The responses to each data point.   const arma::vec& y; }; // [[Rcpp::export]] arma::mat lin_reg_lbfgs(const arma::mat& X, const arma::vec& y) {    // Construct the first objective function.   LinearRegressionFunction lrf(X, y);    // Create the L_BFGS optimizer with default parameters.   // The ens::L_BFGS type can be replaced with any ensmallen optimizer that can   // handle differentiable functions.   ens::L_BFGS lbfgs;    lbfgs.MaxIterations() = 10;    // Create a starting point for our optimization randomly.   // The model has p parameters, so the shape is p x 1.   arma::mat beta(X.n_cols, 1, arma::fill::randn);    // Run the optimization   lbfgs.Optimize(lrf, beta);    return beta; }"},{"path":"https://coatless.github.io/rcppensmallen/articles/using-rcppensmallen.html","id":"verifying-results","dir":"Articles","previous_headings":"Overview > Linear Regression","what":"Verifying Results","title":"Solving Linear Regression using Numeric Optimization","text":"Prior using new optimizer mission critical work, compare results methods already implemented R. best way achieve create oracle model specifying parameters known generate data , , try recover . Moreover, method already implemented R feel free try check result equality within appropriate tolerance threshold. Following methodology, data must generated. Next, optimization procedure used estimate parameters interest. example, results estimation can compared lm(). said, lm() may precise results compared optimizer implemented closed-form solution linear regression plus computational performed rigorously. Comparison Estimated Coefficients","code":"n <- 1e6 beta <- c(-2, 1.5, 3, 8.2, 6.6) p <- length(beta) X <- cbind(1, matrix(rnorm(n), ncol = p - 1)) y <- X %*% beta + rnorm(n / (p - 1)) coefs_lbfgs <- lin_reg_lbfgs(X, y) coefs_lm <- lm.fit(X, y)$coefficients"},{"path":"https://coatless.github.io/rcppensmallen/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"James Joseph Balamuta. Author, maintainer, copyright holder. Dirk Eddelbuettel. Author, copyright holder.","code":""},{"path":"https://coatless.github.io/rcppensmallen/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Balamuta, J.J. Eddelbuettel, D. (2018) RcppEnsmallen: Header-C++ Mathematical Optimization Library 'Armadillo'. URL https://cran.r-project.org/package=RcppEnsmallen. S. Bhardwaj, R. Curtin, M. Edel, Y. Mentekidis, C. Sanderson (2018). ensmallen: flexible C++ library efficient function optimization. Workshop Systems ML Open Source Software NIPS 2018. URL http://www.ensmallen.org/files/ensmallen_2018.pdf.","code":"@Manual{,   title = {{RcppEnsmallen: Header-Only C++ Mathematical Optimization Library for 'Armadillo'}},   author = {James Joseph Balamuta and Dirk Eddelbuettel},   year = {2018}, } @Article{,   title = {{ensmallen: a flexible C++ library for efficient function optimization}},   author = {Shikhar Bhardwaj and Ryan R. Curtin and Marcus Edel and Yannis Mentekidis and Conrad Sanderson},   journal = {Workshop on Systems for ML and Open Source Software at NIPS},   year = {2018},   month = {dec}, }"},{"path":[]},{"path":"https://coatless.github.io/rcppensmallen/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Header-Only C++ Mathematical Optimization Library for Armadillo","text":"Ensmallen C++ header-mathematical optimization library written developers behind MLPACK provides simple set abstractions writing objective function optimize. Provided within various standard cutting-edge optimizers include full-batch gradient descent techniques, small-batch techniques, gradient-free optimizers, constrained optimization. RcppEnsmallen package includes header files Ensmallen library pairs appropriate header files Armadillo RcppArmadillo package. Therefore, users need install Ensmallen Armadillo use RcppEnsmallen.","code":""},{"path":"https://coatless.github.io/rcppensmallen/index.html","id":"status","dir":"","previous_headings":"","what":"Status","title":"Header-Only C++ Mathematical Optimization Library for Armadillo","text":"package active development releases CRAN month.","code":""},{"path":"https://coatless.github.io/rcppensmallen/index.html","id":"authors","dir":"","previous_headings":"Status","what":"Authors","title":"Header-Only C++ Mathematical Optimization Library for Armadillo","text":"James Balamuta Dirk Eddelbuettel","code":""},{"path":"https://coatless.github.io/rcppensmallen/index.html","id":"license","dir":"","previous_headings":"Status","what":"License","title":"Header-Only C++ Mathematical Optimization Library for Armadillo","text":"GPL (>= 2)","code":""},{"path":"https://coatless.github.io/rcppensmallen/reference/RcppEnsmallen-package.html","id":null,"dir":"Reference","previous_headings":"","what":"RcppEnsmallen: Header-Only C++ Mathematical Optimization Library for 'Armadillo' — RcppEnsmallen-package","title":"RcppEnsmallen: Header-Only C++ Mathematical Optimization Library for 'Armadillo' — RcppEnsmallen-package","text":"'Ensmallen' templated C++ mathematical optimization library ('MLPACK' team) provides simple set abstractions writing objective function optimize. Provided within various standard cutting-edge optimizers include full-batch gradient descent techniques, small-batch techniques, gradient-free optimizers, constrained optimization. 'RcppEnsmallen' package includes header files 'Ensmallen' library pairs appropriate header files 'armadillo' 'RcppArmadillo' package. Therefore, users need install 'Ensmallen' 'Armadillo' use 'RcppEnsmallen'. Note 'Ensmallen' licensed 3-Clause BSD, 'Armadillo' starting 7.800.0 licensed Apache License 2, 'RcppArmadillo' ('Rcpp' bindings/bridge 'Armadillo') licensed GNU GPL version 2 later. Thus, 'RcppEnsmallen' also licensed similar terms. Note 'Ensmallen' requires compiler supports 'C++11' 'Armadillo' 9.800 later.","code":""},{"path":[]},{"path":"https://coatless.github.io/rcppensmallen/reference/RcppEnsmallen-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"RcppEnsmallen: Header-Only C++ Mathematical Optimization Library for 'Armadillo' — RcppEnsmallen-package","text":"Maintainer: James Joseph Balamuta balamut2@illinois.edu (ORCID) [copyright holder] Authors: Dirk Eddelbuettel edd@debian.org (ORCID) [copyright holder]","code":""},{"path":"https://coatless.github.io/rcppensmallen/reference/lin_reg_lbfgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Linear Regression with L-BFGS — lin_reg_lbfgs","title":"Linear Regression with L-BFGS — lin_reg_lbfgs","text":"Solves Linear Regression's Residual Sum Squares using L-BFGS optimizer.","code":""},{"path":"https://coatless.github.io/rcppensmallen/reference/lin_reg_lbfgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Linear Regression with L-BFGS — lin_reg_lbfgs","text":"","code":"lin_reg_lbfgs(X, y)"},{"path":"https://coatless.github.io/rcppensmallen/reference/lin_reg_lbfgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Linear Regression with L-BFGS — lin_reg_lbfgs","text":"X matrix Design Matrix regression problem. y vec containing response values.","code":""},{"path":"https://coatless.github.io/rcppensmallen/reference/lin_reg_lbfgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Linear Regression with L-BFGS — lin_reg_lbfgs","text":"estimated \\(\\beta\\) parameter values linear regression.","code":""},{"path":"https://coatless.github.io/rcppensmallen/reference/lin_reg_lbfgs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Linear Regression with L-BFGS — lin_reg_lbfgs","text":"Consider Residual Sum Squares, also known RSS, defined : $$RSS\\left( \\beta \\right) = \\left( { \\mathbf{y} - \\mathbf{X} \\beta } \\right)^{T} \\left( \\mathbf{y} - \\mathbf{X} \\beta \\right)$$ objective function defined : $$f(\\beta) = (y - X\\beta)^2$$ gradient defined : $$\\frac{\\partial RSS}{\\partial \\beta} = -2 \\mathbf{X}^{T} \\left(\\mathbf{y} - \\mathbf{X} \\beta \\right)$$","code":""},{"path":"https://coatless.github.io/rcppensmallen/reference/lin_reg_lbfgs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Linear Regression with L-BFGS — lin_reg_lbfgs","text":"","code":"# Number of Points n = 1000  # Select beta parameters beta = c(-2, 1.5, 3, 8.2, 6.6)  # Number of Predictors (including intercept) p = length(beta)  # Generate predictors from a normal distribution X_i = matrix(rnorm(n), ncol = p - 1)  # Add an intercept X = cbind(1, X_i)  # Generate y values y = X%*%beta + rnorm(n / (p - 1))  # Run optimization with lbfgs theta_hat = lin_reg_lbfgs(X, y)  # Verify parameters were recovered cbind(actual = beta, estimated = theta_hat) #>      actual           #> [1,]   -2.0 -1.956011 #> [2,]    1.5  1.508495 #> [3,]    3.0  2.943863 #> [4,]    8.2  8.241901 #> [5,]    6.6  6.491715"},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-022001","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.20.0.1","title":"RcppEnsmallen 0.2.20.0.1","text":"CRAN release: 2023-10-06 Implementation Active CMAES (#367). LBFGS: avoid generation NaNs, add checks finite values (#368). Fix CNE test tolerances (#360). Rename SCD optimizer, CD (#379). Updated GitHub Action runners update-ensmallen-refresh pkgdown address deprecation notices. (#53, #54, #55). Removed explicit C++11 requirement DESCRIPTION Makevars{.win}. Increased R version required R 4.0 ensure compiler C++11 available.","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021911","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.19.1.1","title":"RcppEnsmallen 0.2.19.1.1","text":"Upgraded ensmallen 2.19.1: “Eight Ball Deluxe” (2023-02-08) Avoid deprecation warnings Armadillo 11.2+ (#347). Updated GitHub Action’s runner latest versions (#51).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021901","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.19.0.1","title":"RcppEnsmallen 0.2.19.0.1","text":"CRAN release: 2022-04-11 Upgraded ensmallen 2.19.0: “Eight Ball Deluxe” (2022-04-11) Added DemonSGD DemonAdam optimizers (#211). Fix bug Adam-like optimizers resetting resetPolicy true. (#340). Add Yogi optimizer (#232). Add AdaBelief optimizer (#233). Add AdaSqrt optimizer (#234). Bump check minimum supported version Armadillo (#342).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021821","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.18.2.1","title":"RcppEnsmallen 0.2.18.2.1","text":"CRAN release: 2022-02-19 Update Catch2 2.13.8 (#336). Fix epoch timing output (#337). Update R package URLs.","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021811","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.18.1.1","title":"RcppEnsmallen 0.2.18.1.1","text":"CRAN release: 2021-11-22 Accelerate SGD test time (#330). Fix potential infinite loop CMAES (#331). Fix SCD partial gradient test (#332).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021801","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.18.0.1","title":"RcppEnsmallen 0.2.18.0.1","text":"CRAN release: 2021-10-22 Add gradient value clipping gradient norm scaling callback (#315). Remove superfluous CMake option build tests (#313). Bump minimum Armadillo version 9.800 (#318). Update Catch2 2.13.7 (#322). Remove redundant template argument C++20 compatibility (#324). Fix MOEAD test stability (#327). Update GitHub Actions standard r-lib/actions configuration. (#45)","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021701","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.17.0.1","title":"RcppEnsmallen 0.2.17.0.1","text":"CRAN release: 2021-07-06 CheckArbitraryFunctionTypeAPI extended MOO support (#283). Refactor NSGA2 (#263, #304). Add Indicators Multiobjective optimizers (#285). Make Callback flexible MultiObjective Optimizers (#289). Add ZDT Test Suite (#273). Add MOEA-D/DE Optimizer (#269). Introduce Policy Methods MOEA/D-DE (#293). Add Das-Dennis weight initialization method (#295). Add Dirichlet Weight Initialization (#296). Improved installation compilation instructions (#300). Disable building tests default faster installation (#303). Modify matrix initialisation take account default element zeroing Armadillo 10.5 (#305).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021621-github-only-release","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.16.2.1 (GitHub-only Release)","title":"RcppEnsmallen 0.2.16.2.1 (GitHub-only Release)","text":"Fix CNE test trials (#267). Update Catch2 2.13.4 (#268). Fix typos documentation (#270, #271). Add clarifying comments problems/ implementations (#276). Remove AdamSchafferFunctionN2Test test Adam test suite prevent spurious issue aarch64 (#259).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021611","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.16.1.1","title":"RcppEnsmallen 0.2.16.1.1","text":"CRAN release: 2021-03-05 Fix test compilation issue ENS_USE_OPENMP set (#255). Fix CNE initial population generation use normal distribution (#258). Fix compilation warnings (#259).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021601-github-only-release","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.16.0.1 (GitHub-Only Release)","title":"RcppEnsmallen 0.2.16.0.1 (GitHub-Only Release)","text":"Expand README example installation add simple example program showing usage L-BFGS optimizer (#248). Refactor tests increase stability reduce random errors (#249).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021511","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.15.1.1","title":"RcppEnsmallen 0.2.15.1.1","text":"Fix include order ensure traits loaded reports (#239).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021501","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.15.0.1","title":"RcppEnsmallen 0.2.15.0.1","text":"CRAN release: 2020-11-04 Make tests robust (#228). Add release date version information. (#226) Fix typo release script (#236). Add optimizer summary report callback (#213).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021421","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.14.2.1","title":"RcppEnsmallen 0.2.14.2.1","text":"CRAN release: 2020-09-07 Fix implementation fonesca fleming problem function f1 f2 type usage negative signs. (#223)","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021411","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.14.1.1","title":"RcppEnsmallen 0.2.14.1.1","text":"CRAN release: 2020-08-27 Fix release script (remove hardcoded information, trim leading whitespaces introduced wc -l MacOS) (#216, #220). Adjust tolerance AugLagrangian convergence based element type (#217). Add NSGA2 optimizer multi-objective functions (#149). Update automatic website update release script (#207). Clarify fix documentation constrained optimizers (#201). Fix L-BFGS convergence starting minimum (#201). Switch GitHub Actions use reference tags always --date CRAN’s check grid (oldrel, release, devel). (#29, #32) Added GitHub Action automatically create PR new version Ensmallen new release detected. (#30, #33)","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021301","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.13.0.1","title":"RcppEnsmallen 0.2.13.0.1","text":"CRAN release: 2020-07-24 Fix CMake package export (#198). Allow early stop callback accept lambda function (#165).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021211","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.12.1.1","title":"RcppEnsmallen 0.2.12.1.1","text":"CRAN release: 2020-04-24 Upgraded ensmallen 2.12.1: “Stir Crazy” (2020-04-20) Fix total number epochs time estimation ProgressBar callback (#181). Handle SpSubview_col SpSubview_row Armadillo 9.870 (#194). Minor documentation fixes (#197). Correction formulation sigma CMA-ES (#183). Remove deprecated methods PrimalDualSolver implementation (#185). (#186).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021131","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.11.3.1","title":"RcppEnsmallen 0.2.11.3.1","text":"CRAN release: 2020-02-20 Prevent spurious compiler warnings (#161). Fix minor memory leaks (#167). Revamp CMake configuration (#152). Allow callback instantiation SGD based optimizer (#155). Minor test stability fixes i386 (#156). Fix Lookahead MaxIterations() check. (#159).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021111","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.11.1.1","title":"RcppEnsmallen 0.2.11.1.1","text":"CRAN release: 2020-01-14 Fix Lookahead Synchronization period type (#153). Add Lookahead (#138). Add AdaBound AMSBound (#137). SGD callback test 32-bit safety (big number) (#143). Use “arbitrary” “separable” terms static function type checks (#145). Remove ‘using namespace std’ problems/ files (#147). Add optional tests building. (#141). Make code samples collapsible documentation. (#140). Switched deployment TravisCI GitHub Actions. (#17, #22) Removed check header file inclusion (#21)","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021031","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.10.3.1","title":"RcppEnsmallen 0.2.10.3.1","text":"CRAN release: 2019-09-30 Add release script rel/ maintainers (#128). Fix Armadillo version check (#133). Documentation fix callbacks (#129). Compatibility fixes ensmallen 1.x (#131). Fix ParallelSGD runtime bug. (#135). Add additional L-BFGS convergence check (#136). Added vignette worked example linear regression package inclusion.","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-021001","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.2.10.0.1","title":"RcppEnsmallen 0.2.10.0.1","text":"CRAN release: 2019-09-07 Optimize() functions now take matrix type; , e.g., arma::fmat arma::sp_mat can used optimization. See documentation (#113). (#119). Introduce callback support. Callbacks can appended last arguments Optimize() call, can perform custom behavior different points optimization. See documentation details (#119). Slight speedups FrankWolfe optimizer (#127).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-011601","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.1.16.0.1","title":"RcppEnsmallen 0.1.16.0.1","text":"CRAN release: 2019-08-29 Add option avoid computing exact objective end optimization (#109). (#118). (#118). Introduce local-best particle swarm optimization, LBestPSO, (#86). (#123).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-011501","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.1.15.0.1","title":"RcppEnsmallen 0.1.15.0.1","text":"CRAN release: 2019-05-20 Upgraded ensmallen release 1.15.0 “Wrong Side Road” (2019-05-14) (#81). (#115). (#115).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-011441","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.1.14.4.1","title":"RcppEnsmallen 0.1.14.4.1","text":"CRAN release: 2019-05-13 Upgraded ensmallen release 1.14.4 “Difficult Crimp” (2019-05-12) (#91). (#100). (#97). (#98). (#92).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-011411","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.1.14.1.1","title":"RcppEnsmallen 0.1.14.1.1","text":"CRAN release: 2019-03-10 Upgraded ensmallen release 1.14.1 “Difficult Crimp” (2019-03-09) (#87). (#90). CNE normal distribution given starting point, accelerate convergence. (#77). (#83).","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-011301","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.1.13.0.1","title":"RcppEnsmallen 0.1.13.0.1","text":"CRAN release: 2019-01-21 Fix list contributors. Make sure files end newlines. Reordered SPSA parameters quiet initialization error surfaced -Wreorder.","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-011201","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.1.12.0.1","title":"RcppEnsmallen 0.1.12.0.1","text":"CRAN release: 2019-01-04 Add link ensmallen PDF README.md. Minor documentation fixes. Remove -verbose documentation source (#61). (#48). (#42). (#46). (#45). (#60). Updated citation information","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-011111","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.1.11.1.1","title":"RcppEnsmallen 0.1.11.1.1","text":"CRAN release: 2018-11-30 Minor documentation fixes. Add WNGrad optimizer. Fix header name documentation samples. Added citation information","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"rcppensmallen-011001","dir":"Changelog","previous_headings":"","what":"RcppEnsmallen 0.1.10.0.1","title":"RcppEnsmallen 0.1.10.0.1","text":"CRAN release: 2018-10-30","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"new-0-1-10-0-1","dir":"Changelog","previous_headings":"","what":"New","title":"RcppEnsmallen 0.1.10.0.1","text":"Support compiling via R mathematical optimizers C++ ensmallen library. Includes ensmallen release 1.10.0 “Corporate Catabolism” (2018-10-19)","code":""},{"path":"https://coatless.github.io/rcppensmallen/news/index.html","id":"special-thanks-0-1-10-0-1","dir":"Changelog","previous_headings":"","what":"Special Thanks","title":"RcppEnsmallen 0.1.10.0.1","text":"crux package largely developed Ensmallen development team consists Conrad Sanderson, Ryan Curtin, MLPACK developers","code":""}]
